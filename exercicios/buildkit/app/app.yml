

---
apiVersion: v1
kind: Namespace
metadata: 
  name: app



---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: redis
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      service: redis
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: redis
    spec:
      containers:
        image: jonathanbaraldi/redis-arm:devops
        # Repositório oficial  - elasticsearch:2
        name: redis
        resources: {}

      restartPolicy: Always
status: {}



---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  namespace: redis
  labels:
    service: redis
  name: redis
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 6379
    targetPort: 6379
  selector:
    service: redis
status:
  loadBalancer: {}




---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: app
  creationTimestamp: null
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      service: app
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: app
    spec:
      containers:
      - image: jonathanbaraldi/node-arm:devops
        # Repositório oficial - mongo:3
        name: app
        resources: {}
      restartPolicy: Always
status: {}



---
apiVersion: v1
kind: Service
metadata:
  namespace: app
  creationTimestamp: null
  labels:
    service: app
  name: app
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 80
    targetPort: 8080
  selector:
    service: app
status:
  loadBalancer: {}


---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: app
  name: app
  annotations:
    allow.http: "false"
spec:
  rules:
  - host: app.rancher.sagemaker.io
    http:
      paths:
        - path: /
          backend:
            serviceName: app
            servicePort: 80
